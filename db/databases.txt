https://www.quackit.com/sqlite/tutorial/import_data_from_csv_file.cfm

SQLite3 cdmxmetro.sqlite

CREATE TABLE IF NOT EXISTS "station_metadata" (
"station" INTEGER,
  "Station_Name" TEXT,
  "Total_influx_2012" INTEGER,
  "Total_influx_2013" INTEGER,
  "Total_influx_2014" INTEGER,
  "Total_influx_2015" INTEGER,
  "Total_influx_2016" INTEGER,
  "Total_influx_2017" INTEGER,
  "Total_influx_2018" INTEGER,
  "Total_influx_2019" INTEGER,
  "Latitude" INTEGER,
  "Longitude" INTEGER,
  PRIMARY KEY("station" ASC)
);

.mode csv
.import Inflow_coordinates.csv station_metadata



CREATE TABLE IF NOT EXISTS "stations"(
"line_id" INTEGER,
"line_label" TEXT,
"1" INTEGER,
"2" INTEGER,
"3" INTEGER,
"4" INTEGER,
"5" INTEGER,
"6" INTEGER,
"7" INTEGER,
"8" INTEGER,
"9" INTEGER,
"10" INTEGER,
"11" INTEGER,
"12" INTEGER,
"13" INTEGER,
"14" INTEGER,
"15" INTEGER,
"16" INTEGER,
"17" INTEGER,
"18" INTEGER,
"19" INTEGER,
"20" INTEGER,
"21" INTEGER,
"22" INTEGER,
"23" INTEGER,
"24" INTEGER,
"25" INTEGER,
"26" INTEGER,
"27" INTEGER,
"28" INTEGER,
"29" INTEGER,
"30" INTEGER,
"31" INTEGER,
"32" INTEGER,
"33" INTEGER,
"34" INTEGER,
"35" INTEGER,
"36" INTEGER,
"37" INTEGER,
"38" INTEGER,
"39" INTEGER,
"40" INTEGER,
"41" INTEGER,
"42" INTEGER,
"43" INTEGER,
"44" INTEGER,
"45" INTEGER,
"46" INTEGER,
"47" INTEGER,
"48" INTEGER,
"49" INTEGER,
"50" INTEGER,
"51" INTEGER,
"52" INTEGER,
"53" INTEGER,
"54" INTEGER,
"55" INTEGER,
"56" INTEGER,
"57" INTEGER,
"58" INTEGER,
"59" INTEGER,
"60" INTEGER,
"61" INTEGER,
"62" INTEGER,
"63" INTEGER,
"64" INTEGER,
"65" INTEGER,
"66" INTEGER,
"67" INTEGER,
"68" INTEGER,
"69" INTEGER,
"70" INTEGER,
"71" INTEGER,
"72" INTEGER,
"73" INTEGER,
"74" INTEGER,
"75" INTEGER,
"76" INTEGER,
"77" INTEGER,
"78" INTEGER,
"79" INTEGER,
"80" INTEGER,
"81" INTEGER,
"82" INTEGER,
"83" INTEGER,
"84" INTEGER,
"85" INTEGER,
"86" INTEGER,
"87" INTEGER,
"88" INTEGER,
"89" INTEGER,
"90" INTEGER,
"91" INTEGER,
"92" INTEGER,
"93" INTEGER,
"94" INTEGER,
"95" INTEGER,
"96" INTEGER,
"97" INTEGER,
"98" INTEGER,
"99" INTEGER,
"100" INTEGER,
"101" INTEGER,
"102" INTEGER,
"103" INTEGER,
"104" INTEGER,
"105" INTEGER,
"106" INTEGER,
"107" INTEGER,
"108" INTEGER,
"109" INTEGER,
"110" INTEGER,
"111" INTEGER,
"112" INTEGER,
"113" INTEGER,
"114" INTEGER,
"115" INTEGER,
"116" INTEGER,
"117" INTEGER,
"118" INTEGER,
"119" INTEGER,
"120" INTEGER,
"121" INTEGER,
"122" INTEGER,
"123" INTEGER,
"124" INTEGER,
"125" INTEGER,
"126" INTEGER,
"127" INTEGER,
"128" INTEGER,
"129" INTEGER,
"130" INTEGER,
"131" INTEGER,
"132" INTEGER,
"133" INTEGER,
"134" INTEGER,
"135" INTEGER,
"136" INTEGER,
"137" INTEGER,
"138" INTEGER,
"139" INTEGER,
"140" INTEGER,
"141" INTEGER,
"142" INTEGER,
"143" INTEGER,
"144" INTEGER,
"145" INTEGER,
"146" INTEGER,
"147" INTEGER,
"148" INTEGER,
"149" INTEGER,
"150" INTEGER,
"151" INTEGER,
"152" INTEGER,
"153" INTEGER,
"154" INTEGER,
"155" INTEGER,
"156" INTEGER,
"157" INTEGER,
"158" INTEGER,
"159" INTEGER,
"160" INTEGER,
"161" INTEGER,
"162" INTEGER,
"163" INTEGER,
PRIMARY KEY("line_id" ASC)
);

.mode csv
.import lineas_estaciones.csv stations